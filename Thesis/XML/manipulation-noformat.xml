<?xml version="1.0" encoding="UTF-8"?>

<controller name="controller" format="state">
  <builder class="sweep.controller.FSABuilder"/>
  <initialState name="6a3960:102d69ac60b:-7fed"/>
  <states>
    <state name="6a3960:102d69ac60b:-7fed">
      <transition nextState="6a3960:102d69ac60b:-7fd7">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="on-armed-mine" value="true"/>
        </rule>
        <action name="disarm-mine-stage-1"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7e7d">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="near-garbage" value="false"/>
        </rule>
        <action name="move-towards-mine"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7fa7">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="on-armed-mine" value="false"/>
        </rule>
        <action name="pick-up-garbage"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7ed5">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="near-garbage" value="true"/>
        </rule>
        <action name="move-random"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7ecd">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="near-garbage" value="false"/>
        </rule>
        <action name="pick-up-garbage"/>
      </transition>
      <default nextState="6a3960:102d69ac60b:-7fed">
        <action name="default-action"/>
      </default>
    </state>
    <state name="6a3960:102d69ac60b:-7fd7">
      <transition nextState="6a3960:102d69ac60b:-7e53">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="near-mine" value="false"/>
        </rule>
        <action name="move-towards-dumpster"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7f1a">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="on-partially-disarmed-mine" value="true"/>
        </rule>
        <action name="broadcast-garbage"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7fd7">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="on-dumpster" value="false"/>
        </rule>
        <action name="broadcast-mine"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7fd7">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="near-garbage" value="false"/>
        </rule>
        <action name="move-towards-dumpster"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7e7d">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="on-garbage" value="false"/>
        </rule>
        <action name="move-random"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7ecd">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="holding-garbage" value="true"/>
        </rule>
        <action name="move-towards-mine"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7fa7">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="on-armed-mine" value="false"/>
        </rule>
        <action name="broadcast-mine"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7f1a">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="near-garbage" value="false"/>
        </rule>
        <action name="put-down-garbage"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7e6e">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="on-garbage" value="true"/>
        </rule>
        <action name="move-towards-mine"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7f53">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="near-garbage" value="false"/>
        </rule>
        <action name="broadcast-garbage"/>
      </transition>
      <default nextState="6a3960:102d69ac60b:-7fed">
        <action name="default-action"/>
      </default>
    </state>
    <state name="6a3960:102d69ac60b:-7fb3">
      <transition nextState="6a3960:102d69ac60b:-7ecd">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="on-dumpster" value="true"/>
        </rule>
        <action name="put-down-garbage"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7e7d">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="on-dumpster" value="false"/>
        </rule>
        <action name="move-towards-dumpster"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7e7d">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="near-garbage" value="false"/>
        </rule>
        <action name="pick-up-garbage"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7f1a">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="on-dumpster" value="true"/>
        </rule>
        <action name="move-towards-dumpster"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7f1a">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="holding-garbage" value="false"/>
        </rule>
        <action name="disarm-mine-stage-1"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7e7d">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="holding-garbage" value="true"/>
        </rule>
        <action name="move-random"/>
      </transition>
      <default nextState="6a3960:102d69ac60b:-7fd7">
        <action name="default-action"/>
      </default>
    </state>
    <state name="6a3960:102d69ac60b:-7fa7">
      <transition nextState="6a3960:102d69ac60b:-7fd7">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="holding-garbage" value="true"/>
        </rule>
        <action name="broadcast-garbage"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7fd7">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="on-partially-disarmed-mine" value="true"/>
        </rule>
        <action name="broadcast-mine"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7fa7">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="on-dumpster" value="true"/>
        </rule>
        <action name="move-towards-garbage"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7fed">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="on-partially-disarmed-mine" value="false"/>
        </rule>
        <action name="move-towards-garbage"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7fb3">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="on-dumpster" value="true"/>
        </rule>
        <action name="move-towards-garbage"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7fb3">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="on-partially-disarmed-mine" value="false"/>
        </rule>
        <action name="move-towards-mine"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7fa7">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="near-garbage" value="false"/>
        </rule>
        <action name="broadcast-mine"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7fed">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="on-garbage" value="true"/>
        </rule>
        <action name="pick-up-garbage"/>
      </transition>
      <default nextState="6a3960:102d69ac60b:-7fd7">
        <action name="default-action"/>
      </default>
    </state>
    <state name="6a3960:102d69ac60b:-7f53">
      <transition nextState="6a3960:102d69ac60b:-7f53">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="on-dumpster" value="false"/>
        </rule>
        <action name="move-towards-mine"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7fed">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="on-partially-disarmed-mine" value="false"/>
        </rule>
        <action name="pick-up-garbage"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7e53">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="on-dumpster" value="true"/>
        </rule>
        <action name="move-towards-dumpster"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7e6e">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="near-mine" value="true"/>
        </rule>
        <action name="move-towards-mine"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7ecd">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="on-partially-disarmed-mine" value="false"/>
        </rule>
        <action name="move-towards-mine"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7ecd">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="on-armed-mine" value="true"/>
        </rule>
        <action name="move-towards-mine"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7fed">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="on-garbage" value="true"/>
        </rule>
        <action name="put-down-garbage"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7ecd">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="on-garbage" value="false"/>
        </rule>
        <action name="broadcast-garbage"/>
      </transition>
      <default nextState="6a3960:102d69ac60b:-7fed">
        <action name="default-action"/>
      </default>
    </state>
    <state name="6a3960:102d69ac60b:-7f1a">
      <transition nextState="6a3960:102d69ac60b:-7fb3">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="on-partially-disarmed-mine" value="true"/>
        </rule>
        <action name="disarm-mine-stage-2"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7fb3">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="on-garbage" value="true"/>
        </rule>
        <action name="broadcast-garbage"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7fb3">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="on-armed-mine" value="false"/>
        </rule>
        <action name="move-towards-dumpster"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7e6e">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="on-partially-disarmed-mine" value="false"/>
        </rule>
        <action name="disarm-mine-stage-1"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7fed">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="near-garbage" value="false"/>
        </rule>
        <action name="move-towards-garbage"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7e7d">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="on-dumpster" value="false"/>
        </rule>
        <action name="broadcast-garbage"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7ed5">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="near-garbage" value="true"/>
        </rule>
        <action name="move-random"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7e6e">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="on-armed-mine" value="true"/>
        </rule>
        <action name="broadcast-mine"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7fb3">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="near-mine" value="false"/>
        </rule>
        <action name="move-random"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7e53">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="holding-garbage" value="true"/>
        </rule>
        <action name="move-random"/>
      </transition>
      <default nextState="6a3960:102d69ac60b:-7fd7">
        <action name="default-action"/>
      </default>
    </state>
    <state name="6a3960:102d69ac60b:-7ed5">
      <transition nextState="6a3960:102d69ac60b:-7ecd">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="holding-garbage" value="true"/>
        </rule>
        <action name="broadcast-mine"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7e7d">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="on-armed-mine" value="true"/>
        </rule>
        <action name="pick-up-garbage"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7fa7">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="on-garbage" value="false"/>
        </rule>
        <action name="move-towards-dumpster"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7f1a">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="near-garbage" value="true"/>
        </rule>
        <action name="disarm-mine-stage-1"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7fa7">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="near-mine" value="false"/>
        </rule>
        <action name="move-towards-mine"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7e6e">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="near-garbage" value="true"/>
        </rule>
        <action name="put-down-garbage"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7fb3">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="on-partially-disarmed-mine" value="false"/>
        </rule>
        <action name="disarm-mine-stage-2"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7ed5">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="near-mine" value="true"/>
        </rule>
        <action name="move-towards-dumpster"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7fed">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="on-armed-mine" value="true"/>
        </rule>
        <action name="pick-up-garbage"/>
      </transition>
      <default nextState="6a3960:102d69ac60b:-7fed">
        <action name="default-action"/>
      </default>
    </state>
    <state name="6a3960:102d69ac60b:-7ecd">
      <transition nextState="6a3960:102d69ac60b:-7e6e">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="holding-garbage" value="false"/>
        </rule>
        <action name="broadcast-mine"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7fa7">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="on-dumpster" value="true"/>
        </rule>
        <action name="put-down-garbage"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7fa7">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="near-garbage" value="false"/>
        </rule>
        <action name="put-down-garbage"/>
      </transition>
      <default nextState="6a3960:102d69ac60b:-7fa7">
        <action name="default-action"/>
      </default>
    </state>
    <state name="6a3960:102d69ac60b:-7e7d">
      <transition nextState="6a3960:102d69ac60b:-7fd7">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="on-garbage" value="false"/>
        </rule>
        <action name="move-towards-dumpster"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7e53">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="on-dumpster" value="true"/>
        </rule>
        <action name="broadcast-mine"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7ecd">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="on-partially-disarmed-mine" value="true"/>
        </rule>
        <action name="move-towards-mine"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7ecd">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="on-partially-disarmed-mine" value="true"/>
        </rule>
        <action name="move-towards-garbage"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7fed">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="on-garbage" value="false"/>
        </rule>
        <action name="broadcast-garbage"/>
      </transition>
      <default nextState="6a3960:102d69ac60b:-7f1a">
        <action name="default-action"/>
      </default>
    </state>
    <state name="6a3960:102d69ac60b:-7e6e">
      <transition nextState="6a3960:102d69ac60b:-7fa7">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="on-garbage" value="false"/>
        </rule>
        <action name="pick-up-garbage"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7fa7">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="on-partially-disarmed-mine" value="true"/>
        </rule>
        <action name="broadcast-mine"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7e6e">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="on-armed-mine" value="true"/>
        </rule>
        <action name="broadcast-garbage"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7f53">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="on-partially-disarmed-mine" value="false"/>
        </rule>
        <action name="move-towards-garbage"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7fd7">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="near-garbage" value="true"/>
        </rule>
        <action name="disarm-mine-stage-1"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7e6e">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="near-garbage" value="false"/>
        </rule>
        <action name="put-down-garbage"/>
      </transition>
      <default nextState="6a3960:102d69ac60b:-7fed">
        <action name="default-action"/>
      </default>
    </state>
    <state name="6a3960:102d69ac60b:-7e53">
      <transition nextState="6a3960:102d69ac60b:-7ecd">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="on-dumpster" value="true"/>
        </rule>
        <action name="move-towards-mine"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7f1a">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="on-partially-disarmed-mine" value="true"/>
        </rule>
        <action name="disarm-mine-stage-2"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7fed">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="on-partially-disarmed-mine" value="false"/>
        </rule>
        <action name="move-towards-dumpster"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7fd7">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="on-partially-disarmed-mine" value="false"/>
        </rule>
        <action name="move-towards-garbage"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7f1a">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="on-armed-mine" value="false"/>
        </rule>
        <action name="move-towards-garbage"/>
      </transition>
      <transition nextState="6a3960:102d69ac60b:-7e6e">
        <rule logical="and">
          <builder class="sweep.controller.SensorRuleBuilder"/>
          <sensor name="holding-garbage" value="false"/>
        </rule>
        <action name="put-down-garbage"/>
      </transition>
      <default nextState="6a3960:102d69ac60b:-7f53">
        <action name="default-action"/>
      </default>
    </state>
  </states>
</controller>

